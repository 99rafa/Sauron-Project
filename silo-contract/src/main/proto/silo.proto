//
// Protocol buffers definition for Silo server
//
syntax = "proto3";
package pt.tecnico.sauron.silo.grpc;


option java_multiple_files = true;

//observation object message
message ObservationMessage{
    Type type = 1;
    string id = 2;
    string datetime = 3;
    string camName = 4;
}

//cam_join silo operation

message CamJoinRequest {
    string camName = 1;
    double latitude = 2;
    double longitude = 3;

}

message CamJoinResponse {

}

//cam_info silo operation

message CamInfoRequest {
    string camName = 1;
}

message CamInfoResponse {
   double latitude = 1;
   double longitude = 2;
}

//report silo operation

message ReportRequest {
    string camName = 1;
    repeated ObservationMessage observation = 2;
}

message ReportResponse {

}

//track silo operation

message TrackRequest {
   Type type = 1;
   string id = 2;
}

message TrackResponse {
    ObservationMessage observation = 1;
}

//trackMatch silo operation

message TrackMatchRequest {
    Type type = 1;
    string subId = 2;
}

message TrackMatchResponse {
    repeated ObservationMessage observation = 1;
}

//trace silo operation

message TraceRequest {
    Type type = 1;
    string id = 2;
}

message TraceResponse {
    repeated ObservationMessage observation = 1;
}

message PingRequest {
    string inputCommand = 1;
}

message PingResponse {
    string outputText = 1;
}

message ClearRequest {

}

message ClearResponse {

}

message InitRequest {

}

message InitResponse {

}

enum Type {
    PERSON = 0;
    CAR = 1;
    UNKNOWN = 2;
}

enum ServerStatus {
    RUNNING = 0;
    DOWN = 1;
}



service SiloOperationsService {
    // Define a RPC operation
    rpc camJoin(CamJoinRequest) returns (CamJoinResponse);
    rpc camInfo(CamInfoRequest) returns (CamInfoResponse);
    rpc report(ReportRequest) returns (ReportResponse);
    rpc track(TrackRequest) returns (TrackResponse);
    rpc trackMatch(TrackMatchRequest) returns (TrackMatchResponse);
    rpc trace(TraceRequest) returns (TraceResponse);
    rpc ctrlPing(PingRequest) returns (PingResponse);
    rpc ctrlClear(ClearRequest) returns (ClearResponse);
    rpc ctrlInit(InitRequest) returns (InitResponse);
}
